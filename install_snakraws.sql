CREATE USER ddd WITH PASSWORD 'asas';
DROP USER ddd;
SELECT VERSION();

DROP TABLE IF EXISTS snakraws_blacklist;
DROP TABLE IF EXISTS snakraws_factevents;
DROP TABLE IF EXISTS snakraws_dimgeolocations;
DROP TABLE IF EXISTS snakraws_dimcities;
DROP TABLE IF EXISTS snakraws_dimcontinents;
DROP TABLE IF EXISTS snakraws_dimcountries;
DROP TABLE IF EXISTS snakraws_dimdevices;
DROP TABLE IF EXISTS snakraws_dimuseragents;
DROP TABLE IF EXISTS snakraws_dimhosts;
DROP TABLE IF EXISTS snakraws_dimips;
DROP TABLE IF EXISTS snakraws_dimregions;
DROP TABLE IF EXISTS snakraws_dimpostalcodes;
DROP TABLE IF EXISTS snakraws_dimreferers;
DROP TABLE IF EXISTS snakraws_shorturls;
DROP TABLE IF EXISTS snakraws_longurls;

create table snakraws_dimgeolocations (
  id               INT          PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  hash             BIGINT       NOT NULL UNIQUE,
  is_mutable       BOOLEAN      NOT NULL DEFAULT TRUE,
  providername     VARCHAR(50)  NOT NULL DEFAULT 'snakr',
  postalcode       VARCHAR(32)  NOT NULL UNIQUE,
  lat              NUMERIC(7, 4) NULL,
  lng              NUMERIC(7, 4) NULL,
  city             VARCHAR(100) NULL,
  regionname       VARCHAR(100) NULL,
  regioncode       VARCHAR(2) NULL,
  countryname      VARCHAR(100) NULL,
  countrycode      VARCHAR(2) NULL,
  countyname       VARCHAR(100) NULL,
  countyweight     NUMERIC(5,2) NULL,
  allcountyweights VARCHAR(100) NULL
);

INSERT INTO snakraws_dimgeolocations  (hash, postalcode, is_mutable, providername)
VALUES (5298596870147225945, 'unknown', FALSE, 'snakr');
INSERT INTO snakraws_dimgeolocations  (hash, postalcode, is_mutable, providername)
VALUES (-8478403668358870585, 'missing', FALSE, 'snakr');
INSERT INTO snakraws_dimgeolocations  (hash, postalcode, is_mutable, providername)
VALUES (-3750763034362895579, '', FALSE, 'snakr');

create table snakraws_dimdevices (
  id               INT          PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  hash             BIGINT       NOT NULL UNIQUE,
  deviceid         VARCHAR(40)  NOT NULL UNIQUE,
  is_mutable BOOLEAN      NOT NULL DEFAULT TRUE
);

INSERT INTO snakraws_dimdevices (hash, deviceid, is_mutable)
VALUES (5298596870147225945, 'unknown', FALSE);
INSERT INTO snakraws_dimdevices (hash, deviceid, is_mutable)
VALUES (-8478403668358870585, 'missing', FALSE);
INSERT INTO snakraws_dimdevices (hash, deviceid, is_mutable)
VALUES (-3750763034362895579, '', FALSE);

create table snakraws_dimuseragents (
  id               INT          PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  hash             BIGINT       NOT NULL UNIQUE,
  useragent        VARCHAR(8192) NOT NULL UNIQUE,
  is_mutable BOOLEAN      NOT NULL DEFAULT TRUE
);

INSERT INTO snakraws_dimuseragents (hash, useragent, is_mutable)
VALUES (5298596870147225945, 'unknown', FALSE);
INSERT INTO snakraws_dimuseragents (hash, useragent, is_mutable)
VALUES (-8478403668358870585, 'missing', FALSE);
INSERT INTO snakraws_dimuseragents (hash, useragent, is_mutable)
VALUES (-3750763034362895579, '', FALSE);

create table snakraws_dimhosts (
  id               INT          PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  hash             BIGINT       NOT NULL UNIQUE,
  hostname         VARCHAR(253) NOT NULL UNIQUE,
  is_mutable BOOLEAN      NOT NULL DEFAULT TRUE
);

INSERT INTO snakraws_dimhosts  (hash, hostname, is_mutable)
VALUES (5298596870147225945, 'unknown', FALSE);
INSERT INTO snakraws_dimhosts  (hash, hostname, is_mutable)
VALUES (-8478403668358870585, 'missing', FALSE);
INSERT INTO snakraws_dimhosts  (hash, hostname, is_mutable)
VALUES (-3750763034362895579, '', FALSE);

create table snakraws_dimips (
  id               INT          PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  hash             BIGINT       NOT NULL UNIQUE,
  ip               VARCHAR(39)  NOT NULL UNIQUE,
  is_mutable BOOLEAN      NOT NULL DEFAULT TRUE
);

INSERT INTO snakraws_dimips (hash, ip, is_mutable)
VALUES (5298596870147225945, 'unknown', FALSE);
INSERT INTO snakraws_dimips (hash, ip, is_mutable)
VALUES (-8478403668358870585, 'missing', FALSE);
INSERT INTO snakraws_dimips (hash, ip, is_mutable)
VALUES (-3750763034362895579, '', FALSE);

create table snakraws_dimreferers (
  id               INT          PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  hash             BIGINT       NOT NULL UNIQUE,
  referer          VARCHAR(1024) NOT NULL UNIQUE,
  is_mutable BOOLEAN      NOT NULL DEFAULT TRUE
);

INSERT INTO snakraws_dimreferers (hash, referer, is_mutable)
VALUES (5298596870147225945, 'unknown', FALSE);
INSERT INTO snakraws_dimreferers (hash, referer, is_mutable)
VALUES (-8478403668358870585, 'missing', FALSE);
INSERT INTO snakraws_dimreferers (hash, referer, is_mutable)
VALUES (-3750763034362895579, '', FALSE);

create table snakraws_longurls (
    id                  INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    hash                BIGINT NOT NULL UNIQUE,
    longurl             VARCHAR(4096) NOT NULL,
    originally_encoded  BOOLEAN NOT NULL DEFAULT FALSE,
    is_active           BOOLEAN NOT NULL DEFAULT TRUE,
    title               VARCHAR(100) NOT NULL DEFAULT '',
    description         VARCHAR(300) NOT NULL DEFAULT '',
    image_url           VARCHAR(4096) NULL,
    byline              VARCHAR(100) NOT NULL DEFAULT '',
    site_name           VARCHAR(100) NOT NULL DEFAULT ''
);

INSERT INTO snakraws_longurls (id, hash, longurl, is_active)
VALUES (0, 4967328134902799212, 'unspecified', TRUE);

create table snakraws_shorturls (
    id                  INT          PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    longurl_id          INT NOT NULL UNIQUE,
    hash                BIGINT NOT NULL UNIQUE,
    shorturl            VARCHAR(40) NOT NULL,
    shorturl_path_size  SMALLINT NULL,
    compression_ratio   DECIMAL(10,2) NULL,
    is_active           BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE UNIQUE INDEX IX_snakraws_shorturls_is_active_longurl_id
ON snakraws_shorturls (is_active, longurl_id);

INSERT INTO snakraws_shorturls (id, longurl_id, hash, shorturl, shorturl_path_size, is_active)
VALUES (0, 0, 4967328134902799212, 'unspecified', NULL, TRUE);

ALTER TABLE snakraws_shorturls
ADD CONSTRAINT fk_snakraws_shorturls_longurl_id
FOREIGN KEY (longurl_id) REFERENCES snakraws_longurls (id) ON DELETE CASCADE;

create table snakraws_factevents (
  id               INT          PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  event_yyyymmdd   CHAR(8) DEFAULT TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDD') NOT NULL,
  event_hhmiss     CHAR(6) DEFAULT TO_CHAR(CURRENT_TIMESTAMP, 'HH24MISS') NOT NULL,
  event_type       CHAR(1) NOT NULL CHECK (event_type IN ('B','D','E','I','L','N','R','S','U','W','X','Z')),
  cid              VARCHAR(32)                                        NULL,
  http_status_code SMALLINT                                           NOT NULL,
  info             VARCHAR(8192)                                      NOT NULL,
  longurl_id       INT                                                NOT NULL,
  shorturl_id      INT                                                NOT NULL,
  geo_id           INT                                                NOT NULL,
  device_id        INT                                                NOT NULL,
  host_id          INT                                                NOT NULL,
  referer_id       INT                                                NOT NULL,
  ip_id            INT                                                NOT NULL,
  useragent_id     INT                                                NOT NULL
);

CREATE INDEX IX_snakraws_factevents_shorturl  ON snakraws_factevents
  (shorturl_id);

CREATE INDEX IX_snakraws_factevents_longurl  ON snakraws_factevents
  (longurl_id);

CREATE INDEX IX_snakraws_factevents_yyyymmdd_hhmiss ON snakraws_factevents
  (event_yyyymmdd, event_hhmiss);

CREATE INDEX IX_snakraws_factevents_type_yyyymmdd_hhmiss ON snakraws_factevents
  (event_type, event_yyyymmdd, event_hhmiss);

CREATE INDEX IX_snakraws_factevents_geo
ON snakraws_factevents
  (geo_id);

CREATE INDEX IX_snakraws_factevents_device
ON snakraws_factevents
  (device_id);

CREATE INDEX IX_snakraws_factevents_host
ON snakraws_factevents
  (host_id);

CREATE INDEX IX_snakraws_factevents_ip
ON snakraws_factevents
  (ip_id);

CREATE INDEX IX_snakraws_factevents_referer
ON snakraws_factevents
  (referer_id);

CREATE INDEX IX_snakraws_factevents_useragent
ON snakraws_factevents
  (useragent_id);

ALTER TABLE snakraws_factevents ADD CONSTRAINT fk_snakraws_factevents_longurl_id
FOREIGN KEY (longurl_id)
REFERENCES snakraws_longurls (id) ON DELETE CASCADE;

ALTER TABLE snakraws_factevents ADD CONSTRAINT fk_snakraws_factevents_shorturl_id
FOREIGN KEY (shorturl_id)
REFERENCES snakraws_shorturls (id) ON DELETE CASCADE;

ALTER TABLE snakraws_factevents ADD CONSTRAINT fk_snakraws_factevents_geo_id
FOREIGN KEY (geo_id)
REFERENCES snakraws_dimgeolocations (id) ON DELETE NO ACTION;

ALTER TABLE snakraws_factevents ADD CONSTRAINT fk_snakraws_factevents_device_id
FOREIGN KEY (device_id)
REFERENCES snakraws_dimdevices (id) ON DELETE NO ACTION;

ALTER TABLE snakraws_factevents ADD CONSTRAINT fk_snakraws_factevents_host_id
FOREIGN KEY (host_id)
REFERENCES snakraws_dimhosts (id) ON DELETE NO ACTION;

ALTER TABLE snakraws_factevents ADD CONSTRAINT fk_snakraws_factevents_referer_id
FOREIGN KEY (referer_id)
REFERENCES snakraws_dimreferers (id) ON DELETE NO ACTION;

ALTER TABLE snakraws_factevents ADD CONSTRAINT fk_snakraws_factevents_ip_id
FOREIGN KEY (ip_id)
REFERENCES snakraws_dimips (id) ON DELETE NO ACTION;

ALTER TABLE snakraws_factevents ADD CONSTRAINT fk_snakraws_factevents_useragent_id
FOREIGN KEY (useragent_id)
REFERENCES snakraws_dimuseragents (id) ON DELETE NO ACTION;

CREATE TABLE snakraws_blacklist (
  id               INT          PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  created_on       TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  is_active        BOOLEAN NOT NULL DEFAULT TRUE,
  geo_id           INT NULL ,
  device_id        INT NULL ,
  host_id          INT NULL ,
  ip_id            INT NULL ,
  referer_id       INT NULL ,
  useragent_id     INT NULL ,
  CHECK (
    (geo_id IS NOT NULL AND geo_id <> 0) OR
    (device_id IS NOT NULL AND device_id <> 0) OR
    (host_id IS NOT NULL AND host_id <> 0) OR
    (ip_id IS NOT NULL AND ip_id <> 0) OR
    (referer_id IS NOT NULL AND referer_id <> 0) OR
    (useragent_id IS NOT NULL AND useragent_id <> 0)
    )
);

CREATE UNIQUE INDEX UX_snakraws_blacklist_by_geo
  ON snakraws_blacklist (
    geo_id ,
    referer_id ,
    ip_id   ,
    useragent_id,
    device_id ,
    host_id
  );

CREATE UNIQUE INDEX UX_snakraws_blacklist_by_technographics
  ON snakraws_blacklist (
    ip_id,
    useragent_id,
    device_id,
    referer_id ,
    host_id,
    geo_id
);
